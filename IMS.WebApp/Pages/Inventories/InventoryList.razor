@page "/inventories"
@using static IMS.WebApp.Components.Common.AutoCompleteComponent;

@inject NavigationManager NavigationManager
@inject IViewInventoriesByNameUseCase ViewInventoriesByNameUseCase

<h3>Inventory List</h3>
<br/>
<SearchInventoryComponent 
    OnSearchInventory="OnInventorySearch"></SearchInventoryComponent>
<br/>
<InventoryListComponent 
    SearchTerm="@searchTerm"></InventoryListComponent>
<br/>
<button 
    type="button" 
    class="btn btn-primary"
    @onclick="AddInventory"
>
    Add Inventory
</button>

<p>
    <IMS.WebApp.Components.Common.AutoCompleteComponent 
        Label="Inventory" 
        SearchFunction="SearchInventory"
        OnItemSelected="OnItemSelected"
    ></IMS.WebApp.Components.Common.AutoCompleteComponent>
    <br/>
    @selectedItem?.Name
</p>

@code {
    private ItemViewModel? selectedItem = null;

    private string searchTerm = string.Empty;

    private void OnInventorySearch(string searchTerm)
    {
        this.searchTerm = searchTerm;
    }

    private void AddInventory()
    {
        NavigationManager.NavigateTo("/addinventory");
    }

    private List<ItemViewModel>? SearchInventory(string name)
    {
        var list = ViewInventoriesByNameUseCase.ExecuteAsync(name).GetAwaiter().GetResult();
        if (list == null) return null;

        return list.Select(x => new ItemViewModel { Id = x.InventoryId, Name = x.InventoryName })?.ToList();
    }

    private void OnItemSelected(ItemViewModel item)
    {
        this.selectedItem = item;
    }
}
